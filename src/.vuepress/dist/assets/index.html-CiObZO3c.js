import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,o,b as t}from"./app-DbvNC3Fd.js";const n={},r=t("p",null,"前言",-1),c=t("p",null,"在现代数据库管理系统中，事务管理（Transaction Management，简称 TM）是一个至关重要的模块。它负责确保数据库操作的原子性、一致性、隔离性和持久性（ACID 特性），以保障数据在高并发环境下的正确性与可靠性。每当你进行一次数据库操作，TM 模块就像是一个无形的保护者，在背后默默地记录和监控着每一个事务的状态，确保数据操作能够顺利完成或在异常情况下能够安全回滚。",-1),i=t("p",null,"在 EasyDB 中，事务管理模块通过维护一个称为 XID 的文件，记录了每个事务的状态。这个文件就像是一张任务清单，每个事务在清单中都有一个唯一的编号，表示它当前的状态是正在进行、已提交，还是已回滚。本文将深入探讨 TM 模块的实现细节，包括事务的开始、提交、回滚以及事务状态的检查和管理。",-1),p=t("p",null,"事务管理模块不仅仅是数据库的核心功能之一，它还提供了接口供其他模块查询事务状态，确保整个数据库系统能够在高并发操作下正常运行。在接下来的章节中，我们将从实际代码出发，详细讲解事务管理模块是如何在 EasyDB 中实现和运作的。",-1),s=[r,c,i,p];function m(l,d){return o(),a("div",null,s)}const g=e(n,[["render",m],["__file","index.html.vue"]]),u=JSON.parse('{"path":"/demo/transaction_manager/","title":"事务管理","lang":"zh-CN","frontmatter":{"title":"事务管理","index":false,"icon":"pajamas:log","category":["事务"],"tag":["XID"],"description":"前言 在现代数据库管理系统中，事务管理（Transaction Management，简称 TM）是一个至关重要的模块。它负责确保数据库操作的原子性、一致性、隔离性和持久性（ACID 特性），以保障数据在高并发环境下的正确性与可靠性。每当你进行一次数据库操作，TM 模块就像是一个无形的保护者，在背后默默地记录和监控着每一个事务的状态，确保数据操作能够顺...","head":[["meta",{"property":"og:url","content":"https://github.com/blockCloth/EasyDB/demo/transaction_manager/"}],["meta",{"property":"og:site_name","content":"EasyDB"}],["meta",{"property":"og:title","content":"事务管理"}],["meta",{"property":"og:description","content":"前言 在现代数据库管理系统中，事务管理（Transaction Management，简称 TM）是一个至关重要的模块。它负责确保数据库操作的原子性、一致性、隔离性和持久性（ACID 特性），以保障数据在高并发环境下的正确性与可靠性。每当你进行一次数据库操作，TM 模块就像是一个无形的保护者，在背后默默地记录和监控着每一个事务的状态，确保数据操作能够顺..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-31T14:46:19.000Z"}],["meta",{"property":"article:author","content":"blockCloth"}],["meta",{"property":"article:tag","content":"XID"}],["meta",{"property":"article:modified_time","content":"2024-08-31T14:46:19.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"事务管理\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-08-31T14:46:19.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"blockCloth\\",\\"url\\":\\"https://github.com/blockCloth\\"}]}"]]},"headers":[],"git":{"createdTime":1724854171000,"updatedTime":1725115579000,"contributors":[{"name":"Dai Yuxuan","email":"1808870333@qq.com","commits":3}]},"readingTime":{"minutes":1.28,"words":385},"filePathRelative":"demo/transaction_manager/README.md","localizedDate":"2024年8月28日","autoDesc":true,"excerpt":"<p>前言</p>\\n<p>在现代数据库管理系统中，事务管理（Transaction Management，简称 TM）是一个至关重要的模块。它负责确保数据库操作的原子性、一致性、隔离性和持久性（ACID 特性），以保障数据在高并发环境下的正确性与可靠性。每当你进行一次数据库操作，TM 模块就像是一个无形的保护者，在背后默默地记录和监控着每一个事务的状态，确保数据操作能够顺利完成或在异常情况下能够安全回滚。</p>\\n<p>在 EasyDB 中，事务管理模块通过维护一个称为 XID 的文件，记录了每个事务的状态。这个文件就像是一张任务清单，每个事务在清单中都有一个唯一的编号，表示它当前的状态是正在进行、已提交，还是已回滚。本文将深入探讨 TM 模块的实现细节，包括事务的开始、提交、回滚以及事务状态的检查和管理。</p>"}');export{g as comp,u as data};
